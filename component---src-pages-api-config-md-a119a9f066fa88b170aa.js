(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{143:function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",function(){return c});var t=a(176),r=a.n(t),o=a(0),i=a.n(o),m=a(172),l=a(171);n.default=function(e){var n=e.components,a=r()(e,["components"]);return i.a.createElement(m.MDXTag,{name:"wrapper",Layout:l.a,layoutProps:a,components:n},i.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"machine-and-state-configuration"}},i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h1",props:{href:"#machine-and-state-configuration","aria-hidden":!0,class:"anchor"}}),"Machine and State Configuration"),i.a.createElement(m.MDXTag,{name:"p",components:n},"In xstate, statecharts are recursive data structures, where the machine and its states (and deeper states) share a common configuration schema."),i.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"machine-configuration"}},i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{href:"#machine-configuration","aria-hidden":!0,class:"anchor"}}),"Machine Configuration"),i.a.createElement(m.MDXTag,{name:"ul",components:n},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"initial"),": (string) The relative state key of the initial state."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional for simple states with no substates (i.e., when ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"states")," is undefined)."),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Must be ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"undefined")," if ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"parallel: true")," is set."))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"parallel"),": (boolean) Set to ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true")," if this is a parallel machine."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional (default: ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"false"),")."))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"states"),": (object) The mapping of state keys to their state configuration."),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"key"),": (string) The name of the machine."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional, but recommended for debugging purposes."))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"strict"),": (boolean) Set to ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true")," if you want strict errors to show (e.g., transitioning from events that are not accepted by the machine)"),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional (default: ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"false"),")")))),i.a.createElement(m.MDXTag,{name:"pre",components:n},i.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"// standard machine config\nconst standardMachineConfig = {\n  key: 'light',\n  initial: 'green',\n  states: {\n    green: { on: { TIMER: 'yellow' } },\n    yellow: { on: { TIMER: 'red' } },\n    red: { on: { TIMER: 'green' } },\n  }\n};\n\n// parallel machine config\nconst parallelMachineConfig = {\n  key: 'intersection',\n  parallel: true,\n  states: {\n    northSouthLight: {\n      initial: 'green',\n      states: {\n        green: { on: { TIMER: 'yellow' } },\n        yellow: { on: { TIMER: 'red' } },\n        red: { on: { TIMER: 'green' } },\n      }\n    },\n    eastWestLight: {\n      initial: 'red',\n      states: {\n        green: { on: { TIMER: 'yellow' } },\n        yellow: { on: { TIMER: 'red' } },\n        red: { on: { TIMER: 'green' } },\n      }\n    }\n  }\n}\n")),i.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"state-configuration"}},i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{href:"#state-configuration","aria-hidden":!0,class:"anchor"}}),"State Configuration"),i.a.createElement(m.MDXTag,{name:"ul",components:n},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"id"),": (string) The unique identifier of the state node (since 3.3)."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional, defaults to the delimited full path to the state node, e.g., ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"'foo.bar.baz'")))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"on"),": (object) The mapping of event types to ",i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#transition-configuration"}},"transitions"),"."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional, especially if state is a final state."))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onEntry"),": (string | string[]) The name(s) of actions to be executed upon entry to this state."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional."))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onExit"),": (string | string[]) The name(s) of actions to be executed upon exit from this state."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional."))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"data"),": (any) Any meta data related to the state node (since 3.2)."),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional.")))),i.a.createElement(m.MDXTag,{name:"pre",components:n},i.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"const redStateConfig = {\n  initial: 'walk',\n  states: {\n    walk: {\n      onEntry: ['flashWalkSign'],\n      on: {\n        PED_COUNTDOWN: 'wait'\n      }\n    },\n    wait: {\n      onEntry: ['flashWaitSign', 'startCountdown'],\n      on: {\n        PED_COUNTDOWN: 'stop'\n      }\n    },\n    stop: {}\n  },\n  on: {\n    TIMER: 'green',\n    POWER_OUTAGE: 'red'\n  }\n}\n")),i.a.createElement(m.MDXTag,{name:"p",components:n},"Compound states (states with substates) can also have a ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"state")," property, just like machines. You must include either ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"initial")," or ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"parallel")," for these compound states - they have the same configuration as standard/parallel machines."),i.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"transition-configuration"}},i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{href:"#transition-configuration","aria-hidden":!0,class:"anchor"}}),"Transition Configuration"),i.a.createElement(m.MDXTag,{name:"p",components:n},"On the ",i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#state-configuration"}},"state configuration"),", transitions are specified in the ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"on")," property. The values can be"),i.a.createElement(m.MDXTag,{name:"ul",components:n},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"an object mapping events to ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"string")," state IDs:")),i.a.createElement(m.MDXTag,{name:"pre",components:n},i.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"const lightMachine = Machine({\n  initial: 'green',\n  states: {\n    green: {\n      on: {\n        // on the 'TIMER' event, go to the 'yellow' state\n        TIMER: 'yellow'\n      }\n    },\n    yellow: {\n      // ...\n    },\n    red: {\n      // ...\n    }\n  }\n});\n")),i.a.createElement(m.MDXTag,{name:"ul",components:n},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"an object mapping events to transition configs with these props:"),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"cond"),": (string | function) a conditional guard that must evaluate to ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true")," for the transition to take place (see ",i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"guides/guards.md"}},"guarded transitions"),")"),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional."))),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"actions"),": (Action[]) an array of action strings or objects that are to be executed when the transition takes place (see ",i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"api/actions.md"}},"actions"),")\n- Optional.\n/",i.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"}," - ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"in"),": (string | object) a string or object representing the state that the current state must match for the transition to take place (see ",i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"em",props:{href:"guides/guards.md"}},"guarded transitions"),")\n- Optional. "),"/"),i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"internal"),": (boolean) whether the transition is an internal transition or not (see ",i.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"guides/internal.md"}},"internal transitions"),")"),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Optional, defaults to ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"false"))))))),i.a.createElement(m.MDXTag,{name:"pre",components:n},i.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"const lightMachine = Machine({\n  initial: 'green',\n  states: {\n    green: {\n      on: {\n        TIMER: {\n          target: 'yellow', // since 4.0\n          // specify that 'startYellowTimer' action should be executed\n          actions: ['startYellowTimer']\n        }\n      }\n    },\n    yellow: {\n      on: {\n        TIMER: {\n          target: 'red', // since 4.0\n          // transition to 'red' only if < 100 seconds elapsed\n          cond: ({ elapsed }) => elapsed < 100\n        }\n      }\n    },\n    red: {\n      // ...\n    }\n  }\n});\n")),i.a.createElement(m.MDXTag,{name:"ul",components:n},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"an array of conditional transitions with the same configuration as above, but with an additional ",i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"target")," prop:"),i.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},i.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},i.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"target"),": (string | string[]) a string or array of strings representing the state(s) that the machine will transition to.")))),i.a.createElement(m.MDXTag,{name:"pre",components:n},i.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"const lightMachine = Machine({\n  initial: 'green',\n  states: {\n    green: {\n      on: {\n        TIMER: [\n          // transition to 'green' only if < 100 seconds elapsed\n          { target: 'green', cond: ({ elapsed }) => elapsed < 100 },\n          // transition to 'yellow' only if >= 200 seconds elapsed\n          { target: 'yellow', cond: ({ elapsed }) => elapsed >= 200},\n          // otherwise transition to 'red'\n          { target: 'red' }\n        ]\n      }\n    },\n    yellow: {\n      // ...\n    },\n    red: {\n      // ...\n    }\n  }\n});\n")))};var c={}},164:function(e,n,a){"use strict";a.r(n),a.d(n,"graphql",function(){return f}),a.d(n,"StaticQueryContext",function(){return g}),a.d(n,"StaticQuery",function(){return d});var t=a(0),r=a.n(t),o=a(4),i=a.n(o),m=a(163),l=a.n(m);a.d(n,"Link",function(){return l.a}),a.d(n,"withPrefix",function(){return m.withPrefix}),a.d(n,"navigate",function(){return m.navigate}),a.d(n,"push",function(){return m.push}),a.d(n,"replace",function(){return m.replace}),a.d(n,"navigateTo",function(){return m.navigateTo});var c=a(28);a.d(n,"waitForRouteChange",function(){return c.c});var s=a(165),p=a.n(s);a.d(n,"PageRenderer",function(){return p.a});var u=a(39);a.d(n,"parsePath",function(){return u.a});var g=r.a.createContext({}),d=function(e){return r.a.createElement(g.Consumer,null,function(n){return e.data||n[e.query]&&n[e.query].data?(e.render||e.children)(e.data?e.data.data:n[e.query].data):r.a.createElement("div",null,"Loading (StaticQuery)")})};function f(){throw new Error("It appears like Gatsby is misconfigured. Gatsby related `graphql` calls are supposed to only be evaluated at compile time, and then compiled away,. Unfortunately, something went wrong and the query was left in the compiled code.\n\n.Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.")}d.propTypes={data:i.a.object,query:i.a.string.isRequired,render:i.a.func,children:i.a.func}},165:function(e,n,a){var t;e.exports=(t=a(168))&&t.default||t},166:function(e,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.withMDXComponents=void 0;var t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},r=m(a(0)),o=m(a(54)),i=m(a(4));function m(e){return e&&e.__esModule?e:{default:e}}var l=(0,o.default)({}),c=l.Provider,s=l.Consumer;n.withMDXComponents=function(e){return function(n){var a=n.components,o=function(e,n){var a={};for(var t in e)n.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t]);return a}(n,["components"]);return r.default.createElement(s,null,function(n){return r.default.createElement(e,t({components:a||n},o))})}};var p=function(e){var n=e.components,a=e.children;return r.default.createElement(c,{value:n},a)};p.propTypes={components:i.default.object.isRequired,children:i.default.element.isRequired},n.default=p},167:function(e){e.exports={data:{site:{siteMetadata:{title:"Xstate Docs"}}}}},168:function(e,n,a){"use strict";a.r(n);var t=a(11),r=a.n(t),o=a(0),i=a.n(o),m=a(4),l=a.n(m),c=a(53),s=a(1),p=function(e){var n=e.location,a=s.default.getResourcesForPathnameSync(n.pathname);return i.a.createElement(c.a,r()({location:n,pageResources:a},a.json))};p.propTypes={location:l.a.shape({pathname:l.a.string.isRequired}).isRequired},n.default=p},169:function(e,n,a){},171:function(e,n,a){"use strict";var t=a(167),r=a(0),o=a.n(r),i=a(4),m=a.n(i),l=a(175),c=a.n(l),s=a(164),p=function(e){var n=e.siteTitle;return o.a.createElement("div",{style:{background:"rebeccapurple",marginBottom:"1.45rem"}},o.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"1.45rem 1.0875rem"}},o.a.createElement("h1",{style:{margin:0}},o.a.createElement(s.Link,{to:"/",style:{color:"white",textDecoration:"none"}},n))))},u=(a(169),function(e){var n=e.children;return o.a.createElement(s.StaticQuery,{query:"755544856",render:function(e){return o.a.createElement(o.a.Fragment,null,o.a.createElement(c.a,{title:e.site.siteMetadata.title,meta:[{name:"description",content:"Sample"},{name:"keywords",content:"sample, something"}]},o.a.createElement("html",{lang:"en"})),o.a.createElement(p,{siteTitle:e.site.siteMetadata.title}),o.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0px 1.0875rem 1.45rem",paddingTop:0}},n))},data:t})});u.propTypes={children:m.a.node.isRequired};n.a=u},172:function(e,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=a(173);Object.defineProperty(n,"MDXTag",{enumerable:!0,get:function(){return o(t).default}});var r=a(166);function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"MDXProvider",{enumerable:!0,get:function(){return o(r).default}})},173:function(e,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},r=function(){function e(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(n,a,t){return a&&e(n.prototype,a),t&&e(n,t),n}}(),o=a(0),i=c(o),m=c(a(174)),l=a(166);function c(e){return e&&e.__esModule?e:{default:e}}var s={inlineCode:"code",wrapper:"div"},p=function(e){function n(){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),function(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}(n,o.Component),r(n,[{key:"render",value:function(){var e=this.props,n=e.name,a=e.parentName,r=e.props,o=void 0===r?{}:r,l=e.children,c=e.components,p=void 0===c?{}:c,u=e.Layout,g=e.layoutProps,d=p[a+"."+n]||p[n]||s[n]||n;return u?((0,m.default)(this,u),i.default.createElement(u,t({components:p},g),i.default.createElement(d,o,l))):i.default.createElement(d,o,l)}}]),n}();n.default=(0,l.withMDXComponents)(p)},174:function(e,n,a){"use strict";var t={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},r={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o=Object.defineProperty,i=Object.getOwnPropertyNames,m=Object.getOwnPropertySymbols,l=Object.getOwnPropertyDescriptor,c=Object.getPrototypeOf,s=c&&c(Object);e.exports=function e(n,a,p){if("string"!=typeof a){if(s){var u=c(a);u&&u!==s&&e(n,u,p)}var g=i(a);m&&(g=g.concat(m(a)));for(var d=0;d<g.length;++d){var f=g[d];if(!(t[f]||r[f]||p&&p[f])){var h=l(a,f);try{o(n,f,h)}catch(e){}}}return n}return n}}}]);
//# sourceMappingURL=component---src-pages-api-config-md-a119a9f066fa88b170aa.js.map